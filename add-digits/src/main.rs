//! ## 各位相加 ##
//! [原题目地址](https://leetcode-cn.com/problems/add-digits/) 难度：<b>简单</b>
//! ### 题目描述 ###
//! 给定一个非负整数 num，反复将各个位上的数字相加，直到结果为一位数。
//! 
//! 示例:
//! ```
//! 输入: 38
//! 输出: 2 
//! 解释: 各位相加的过程为：3 + 8 = 11, 1 + 1 = 2。 由于 2 是一位数，所以返回 2。
//! ```
//! 进阶:
//! 你可以不使用循环或者递归，且在 O(1) 时间复杂度内解决这个问题吗？

pub struct Solution;

impl Solution {
    /// 使用循环解很简单了
    /// 
    /// 在数学上，要求的结果数字叫做”数根“，每个自然数都有一个数根，且数根是有规律的。规律如下
    /// ```
    /// 原数: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
    /// 数根: 1 2 3 4 5 6 7 8 9  1  2  3  4  5  6  7  8  9  1  2  3  4  5  6  7  8  9  1  2  3 
    /// ```
    /// 从1~9每9个自然数一个循环。公式也有数学证明
    pub fn add_digits(num: i32) -> i32 {
        (num - 1) % 9 + 1
    }
}

fn main() {
    println!("Hello, world!");
}
